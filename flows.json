[
    {
        "id": "9ff92e94e1d6d4cb",
        "type": "tab",
        "label": "Flasher",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "74792be3bc746e68",
        "type": "tab",
        "label": "Lights up and turns off a few seconds",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "0fc4f508f4e5ddc0",
        "type": "tab",
        "label": "Press and after a few seconds it turns on",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "2f7256a828f5a446",
        "type": "tab",
        "label": "Toggle",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "3457201d50f71274",
        "type": "tab",
        "label": "http turn on and off the lamp",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "c4162a0c1f169f4e",
        "type": "tab",
        "label": "Http complex turn on led after while",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "87aa28b1763b36eb",
        "type": "inject",
        "z": "9ff92e94e1d6d4cb",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "0.5",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 120,
        "wires": [
            [
                "d4803bb9eda5459d"
            ]
        ]
    },
    {
        "id": "d4803bb9eda5459d",
        "type": "function",
        "z": "9ff92e94e1d6d4cb",
        "name": "function 1",
        "func": "msg.payload = flow.get(\"led\")||false\nmsg.payload = !msg.payload\nflow.set(\"led\",msg.payload)\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 120,
        "wires": [
            [
                "ec1fa7a2600c7e64"
            ]
        ]
    },
    {
        "id": "ec1fa7a2600c7e64",
        "type": "rpi-gpio out",
        "z": "9ff92e94e1d6d4cb",
        "name": "",
        "pin": "18",
        "set": false,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 600,
        "y": 120,
        "wires": []
    },
    {
        "id": "e3903b7e3395a275",
        "type": "inject",
        "z": "74792be3bc746e68",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 130,
        "y": 140,
        "wires": [
            [
                "febfec36abbdc068",
                "20cd88a63a828edd"
            ]
        ]
    },
    {
        "id": "febfec36abbdc068",
        "type": "delay",
        "z": "74792be3bc746e68",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 340,
        "y": 60,
        "wires": [
            [
                "50feb5943d35664d"
            ]
        ]
    },
    {
        "id": "50feb5943d35664d",
        "type": "change",
        "z": "74792be3bc746e68",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 520,
        "y": 60,
        "wires": [
            [
                "20cd88a63a828edd"
            ]
        ]
    },
    {
        "id": "20cd88a63a828edd",
        "type": "rpi-gpio out",
        "z": "74792be3bc746e68",
        "name": "",
        "pin": "18",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 720,
        "y": 140,
        "wires": []
    },
    {
        "id": "eebc7b3cbb3a93d4",
        "type": "inject",
        "z": "0fc4f508f4e5ddc0",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 120,
        "y": 180,
        "wires": [
            [
                "f9e964d93498ab5b"
            ]
        ]
    },
    {
        "id": "f9e964d93498ab5b",
        "type": "delay",
        "z": "0fc4f508f4e5ddc0",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 340,
        "y": 100,
        "wires": [
            [
                "46928889b2b6b7ba"
            ]
        ]
    },
    {
        "id": "46928889b2b6b7ba",
        "type": "change",
        "z": "0fc4f508f4e5ddc0",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "1",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 100,
        "wires": [
            [
                "4539d5343b5c82ba"
            ]
        ]
    },
    {
        "id": "4539d5343b5c82ba",
        "type": "rpi-gpio out",
        "z": "0fc4f508f4e5ddc0",
        "name": "",
        "pin": "18",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 780,
        "y": 260,
        "wires": []
    },
    {
        "id": "a88cbecbe5f98231",
        "type": "inject",
        "z": "0fc4f508f4e5ddc0",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 130,
        "y": 260,
        "wires": [
            [
                "4539d5343b5c82ba"
            ]
        ]
    },
    {
        "id": "7153a784ecb353ad",
        "type": "inject",
        "z": "2f7256a828f5a446",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 190,
        "y": 160,
        "wires": [
            [
                "5bf6675a03637720"
            ]
        ]
    },
    {
        "id": "5bf6675a03637720",
        "type": "rpi-gpio out",
        "z": "2f7256a828f5a446",
        "name": "",
        "pin": "18",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 560,
        "y": 220,
        "wires": []
    },
    {
        "id": "e4dd8dd6ac1dbdeb",
        "type": "inject",
        "z": "2f7256a828f5a446",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 190,
        "y": 240,
        "wires": [
            [
                "5bf6675a03637720"
            ]
        ]
    },
    {
        "id": "2ca0881ba88a7860",
        "type": "http in",
        "z": "3457201d50f71274",
        "name": "",
        "url": "/light/:stats",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 180,
        "y": 220,
        "wires": [
            [
                "3404d6a8635af5de"
            ]
        ]
    },
    {
        "id": "714f0b2663d97328",
        "type": "http response",
        "z": "3457201d50f71274",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 850,
        "y": 120,
        "wires": []
    },
    {
        "id": "3404d6a8635af5de",
        "type": "function",
        "z": "3457201d50f71274",
        "name": "function 2",
        "func": "\nlet params = msg.req.params.stats\n\nif(+params === 0 || +params === 1) { \n    msg.topic =  \"Success\"\n    msg.payload = +params\n    return msg\n}\n\nmsg.topic = \"Must be between 0 and 1\"\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 220,
        "wires": [
            [
                "d6d29168ce308261",
                "252ae9c32a23d18b"
            ]
        ]
    },
    {
        "id": "d6d29168ce308261",
        "type": "template",
        "z": "3457201d50f71274",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{ \n    \"stats\":  \"{{topic}}\"\n}",
        "output": "json",
        "x": 600,
        "y": 120,
        "wires": [
            [
                "714f0b2663d97328"
            ]
        ]
    },
    {
        "id": "252ae9c32a23d18b",
        "type": "rpi-gpio out",
        "z": "3457201d50f71274",
        "name": "",
        "pin": "18",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 720,
        "y": 220,
        "wires": []
    },
    {
        "id": "b4c1133bdbcd7546",
        "type": "http in",
        "z": "c4162a0c1f169f4e",
        "name": "api",
        "url": "/light",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 120,
        "wires": [
            [
                "7083f89f4310e30a"
            ]
        ]
    },
    {
        "id": "fec566315fd0c391",
        "type": "http response",
        "z": "c4162a0c1f169f4e",
        "name": "response",
        "statusCode": "",
        "headers": {},
        "x": 1060,
        "y": 120,
        "wires": []
    },
    {
        "id": "2e863f460c6aa6e3",
        "type": "template",
        "z": "c4162a0c1f169f4e",
        "name": "feedbackApi",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "mustache",
        "template": "{ \n    \"stats\":  \"{{feedbackApi}}\"\n}",
        "output": "json",
        "x": 790,
        "y": 120,
        "wires": [
            [
                "fec566315fd0c391"
            ]
        ]
    },
    {
        "id": "7083f89f4310e30a",
        "type": "function",
        "z": "c4162a0c1f169f4e",
        "name": "handleProcessApi",
        "func": "let stats = msg.payload.stats \nlet timeSeconds = msg.payload.time\n\nif(isNaN(stats) || typeof stats != 'number' || isNaN(timeSeconds) || typeof timeSeconds != 'number' ) { \n    msg.feedbackApi = \"Stats or time need be type number\"\n    return msg\n}\n\nif(stats > 1 || stats < 0) { \n    msg.feedbackApi = \"Time needs to be between 0 and 1\"\n    return msg\n}\n\nlet time = timeSeconds * 1000\n\nmsg.feedbackApi = \"Success\"\nmsg.delay = time\nmsg.payload = stats\n \n\n \n \n \n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 120,
        "wires": [
            [
                "2e863f460c6aa6e3",
                "022e8be3c1086e0a"
            ]
        ]
    },
    {
        "id": "ea57b29c300b01a0",
        "type": "rpi-gpio out",
        "z": "c4162a0c1f169f4e",
        "name": "raspberryOut",
        "pin": "18",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 790,
        "y": 240,
        "wires": []
    },
    {
        "id": "022e8be3c1086e0a",
        "type": "function",
        "z": "c4162a0c1f169f4e",
        "name": "handleDelayPaylod",
        "func": "\nfunction clear() {\n   clearInterval(interval)\n}\n\nlet interval = setInterval(function(){\n  msg.payload = !msg.payload\n  node.send(msg)\n  clear()\n  node.done()\n},msg.delay)\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 240,
        "wires": [
            [
                "ea57b29c300b01a0"
            ]
        ]
    }
]